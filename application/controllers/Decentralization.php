<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Decentralization extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Decentralization_model');
    } 

    /*
     * Listing of decentralization
     */
    function index()
    {
        $data['decentralization'] = $this->Decentralization_model->get_all_decentralization();
        
        $data['_view'] = 'decentralization/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new decentralization
     */
    function add()
    {   
        if(isset($_POST) && count($_POST) > 0)     
        {   
            $params = array(
				'Name' => $this->input->post('Name'),
				'Note' => $this->input->post('Note'),
            );
            
            $decentralization_id = $this->Decentralization_model->add_decentralization($params);
            redirect('decentralization/index');
        }
        else
        {            
            $data['_view'] = 'decentralization/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a decentralization
     */
    function edit($IdDecentralization)
    {   
        // check if the decentralization exists before trying to edit it
        $data['decentralization'] = $this->Decentralization_model->get_decentralization($IdDecentralization);
        
        if(isset($data['decentralization']['IdDecentralization']))
        {
            if(isset($_POST) && count($_POST) > 0)     
            {   
                $params = array(
					'Name' => $this->input->post('Name'),
					'Note' => $this->input->post('Note'),
                );

                $this->Decentralization_model->update_decentralization($IdDecentralization,$params);            
                redirect('decentralization/index');
            }
            else
            {
                $data['_view'] = 'decentralization/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The decentralization you are trying to edit does not exist.');
    } 

    /*
     * Deleting decentralization
     */
    function remove($IdDecentralization)
    {
        $decentralization = $this->Decentralization_model->get_decentralization($IdDecentralization);

        // check if the decentralization exists before trying to delete it
        if(isset($decentralization['IdDecentralization']))
        {
            $this->Decentralization_model->delete_decentralization($IdDecentralization);
            redirect('decentralization/index');
        }
        else
            show_error('The decentralization you are trying to delete does not exist.');
    }
    
}
